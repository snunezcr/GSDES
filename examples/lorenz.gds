# General Stochastic Differential Equations Solver
#
# Eric Jakobsson, Beckman-UIUC
# Santiago Nunez-Corrales, Informatics-UIUC
#
# Example case 1: Stochastic Lorenz Equations

model {
  annotations {
    name "Stochastic Lorenz equations";
    authors [ (1, "Santiago Nunez-Corrales"), (2, "Eric Jakobsson") ];
    affiliations [ (1, "Informatics, UIUC"), (2, "Beckman Institute, UIUC") ];
    description "Extension of original 1963's Lorenz chaotic deterministic
                   equations to a stochastic field.";
    version 1.0;
    date 2017-JAN-09;
  }

  execution {
    distributed true;
    processes 100;
    startat 0;
    noisy true;
    ensemble 100;
  }

  parameters {
    given real a {
      label "Prandtl number";
      source netcdf [ "weather.nc", "PN" ];
    }

    sto real b {
      label "Rayleigh number";
      distribution gaussian;
      arguments [30, 1, 0, 0, 0];
    }

    sto real c {
      label "Dimension number";
      distribution fpe fp1;
    }

    det real k {
      label "Noise multiplier";
      value 1.0;
    }
  }

  manifold {
    det real X {
      label "Stream function";
      range [-2e10, 2e10];
      delta [0.001, 0.01];
    }

    det real Y {
      label "Temperature gradient";
      range [-2e10, 2e10];
      delta [0.005, 0.05];
    }

    det real Z {
      label "Temperature gradient";
      range [-2e10, 2e10];
      delta [0.001, 0.01];
    }

    det time t {
      label "Time";
      range [0, 10000];
      delta [0.0001, 0.01];
    }

    sto real W[1] {
      label "Noise for X";
      distribution exponential;
      arguments [30, 1, 0, 0, 0];
    }

    sto real W[2] {
      label "Noise for Y";
      distribution exponential;
      arguments [30, 1, 0, 0, 0];
    }

    sto real W[3] {
      label "Noise for X";
      distribution exponential;
      arguments [30, 1, 0, 0, 0];
    }
  }

  fpe {
    pdf fp_1 {
      diff c on (X Y) by (t);
      drift fixed [0.4, 0.5];
      diffusion fixed [ [0.1, 0.9], [0.5, 0,5] ];
    }
  }

  system {
    level 0 {
      diff X on (t) by (t) = a * (Y - X) + k * W[1];
      diff Y on (t) by (t) = X * (b - Z) - Y + k * W[2];
      diff Z on (t) by (t) = X * Y - c * Z + k * W[3];
      initial [ (X, 1.0), (Y, 1.0), (Z, 2.0) ];
    }
  }

  output {
      file netcdf "lorenz.nc";
      trajectory [X Y Z] with frequency sample 0.2;
      phase [X Y] sample 0.5;
      interaction [X Z] sample 1.0;
    }
}
